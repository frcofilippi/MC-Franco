{"version":3,"sources":["store/actions/types/authActionTypes.js","store/actions/burgerBuilderActions.js","store/actions/orderActions.js","firebase.js","store/actions/localStorageManager.js","store/actions/authActions.js","store/actions/types/orderActionTypes.js","hoc/Auxiliary.js","axiosOrders.js","components/UI/Spinner/Spinner.js","store/actions/types/burgerBuilderActionTypes.js","components/Burger/BurgerIngredients/BurgerIngredients.module.css","hoc/withErrorHandler/withErrorHandler.js","components/UI/InputElement/InputElement.module.css","components/UI/Toggle/Toggle.module.css","components/Navigation/Sidedrawer/Sidedrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Button/Button.module.css","components/UI/Button/Button.js","components/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Order/Order.module.css","containers/Auth/Authentication.module.css","components/UI/InputElement/InputElement.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","containers/Layout/Layout.module.css","assets/img/burger-logo.png","components/Logo/Logo.module.css","components/NavigationItems/NavigationItems.module.css","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Spinner/Spinner.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/Logo/Logo.js","components/NavigationItems/NavigationItem/NavigationItem.js","components/NavigationItems/NavigationItems.js","components/Navigation/Sidedrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/Sidedrawer/Sidedrawer.js","containers/Layout/Layout.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/Order.js","containers/Orders/Orders.js","components/UI/Toggle/Toggle.js","containers/Auth/Authentication.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilderReducer.js","store/reducers/orderReducer.js","store/reducers/authReducer.js","index.js"],"names":["LOGIN_START","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SIGNUP_START","SIGNUP_SUCCESS","SIGNUP_FAIL","addIngredientes","ingrName","type","actionType","ingredientName","removeIngredientes","initializeIngredientes","dispatch","axios","get","then","resp","ingredients","data","burgerIngredients","catch","err","beginPlacingOrder","idToken","orderInfo","history","actionTypes","post","push","id","orderId","orderData","storeOrder","name","error","loadOrders","uid","loadedOrders","response","fetchedOrders","order","firebaseConnector","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","writeLocalStorage","token","expDate","localStorage","setItem","loginUser","user","pwd","loginUserStart","auth","signInWithEmailAndPassword","currentUser","toJSON","loginUserSuccess","stsTokenManager","accessToken","expirationTime","storageManager","loginUserFail","message","signUpUser","email","signUpUserStart","createUserWithEmailAndPassword","signUpUserSuccess","signUpUserFail","checkAuthenticatedUser","getItem","Date","getTime","logoutUser","removeItem","console","BEGIN_ORDER","ORDER_PLACED_SUCCESFULLY","ORDER_PLACED_ERROR","LOAD_ORDERS_START","LOAD_ORDERS_SUCESS","LOAD_ORDERS_FAIL","aux","props","children","orderInstance","create","baseURL","spinner","className","classes","Loader","ADD_INGREDIENTE","REMOVE_INGREDIENTE","INITIALIZE_INGREDIENTS","SET_ERROR","module","exports","withErrorHanlder","WrappedComponent","state","onErrorCloseModalHandler","setState","this","reqInterceptor","interceptors","request","use","req","resInterceptor","res","eject","show","closeModal","Component","backdrop","bp","Backdrop","onClick","clicked","Modal","content","ModalContainer","button","buttonClass","Button","Success","Cancel","join","inputElement","inputElementStyle","valid","Invalid","element","inputType","InputBox","elementConfig","value","onChange","event","changed","Dropdown","options","map","option","key","displayValue","InputElement","Label","hidden","label","BurgerIngredient","ingredient","BreadTop","BreadBottom","Seeds1","Meat","Salad","Cheese","Bacon","burger","transformedIngredients","Object","keys","ingKey","Array","_","index","reduce","arr","el","concat","length","Burger","logo","Logo","src","logoImage","alt","navigationItem","NavItem","to","href","activeClassName","active","exact","navigationItems","loggedIn","NavigationItem","loggedOut","NavItems","authenticated","drawerToggle","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","NavigationItems","sidedrawer","classToApply","Sidedrawer","Open","Close","closeClicked","Layout","showSideDrawer","closeSideDrawerHandler","openSideDrawerHandler","drawerTogglerHandler","prevState","openClicked","Content","connect","buildControl","BuildControl","Less","lessClicked","disabled","More","moreClicked","buildControls","ControlPanel","totalPrice","toFixed","ctrl","lessButtonClicked","moreButtonClicked","disabledInfo","purchasable","CheckoutButton","purchasing","orderSummary","ingrKey","style","textTransform","price","purchaseCanceled","continueClicked","BurgerBuilder","loading","purchasingHandler","cancelPurchasingHandler","continuePurchaseHandler","ingrs","fetchIngredients","values","sum","disableInfo","OrderSummary","Spinner","BuildControls","onRemoveIngredient","onAddIngredient","updatePurchasableState","cancelPurchasing","withErrorHandler","ingrd","OrderLabel","orderDate","date","getDate","getMonth","getYear","Order","textAlign","Orders","orders","orderArray","Fragment","actions","toggle","toggleButtonClasses","ToggleButton","Active","toggleClicked","Container","InnerCircle","Authentication","loginForm","placeholder","validationRules","required","minLength","isEmail","touched","password","loginFormValid","isSignUp","onSubmitHandler","preventDefault","username","signupUser","inputChangeHandler","updatedLoginForm","target","validateInput","formValid","checkFormValidity","onToggleButtonChange","inputElment","rules","maxLength","test","formFieldsArray","input","formFields","field","buttonText","InsideSpinner","onSubmit","color","Toggle","Logout","Checkout","React","lazy","App","checkForAuthenticatedUser","routes","path","component","render","fallback","withRouter","logOutUser","Boolean","window","location","hostname","match","INGREDIENTS_PRICES","salad","cheese","bacon","meat","initialState","reducer","action","ActionType","updatedOrders","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","next","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8e3b8564.chunk.js","sourcesContent":["export const LOGIN_START = 'LOGIN_START';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\n\r\nexport const SIGNUP_START = 'SIGNUP_START';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n","import * as actionType from './types/burgerBuilderActionTypes';\r\nimport axios from '../../axiosOrders';\r\n\r\n\r\nexport const addIngredientes = (ingrName) => {\r\n    return {\r\n        type: actionType.ADD_INGREDIENTE,\r\n        ingredientName: ingrName\r\n    }\r\n}\r\n\r\nexport const removeIngredientes = (ingrName) => {\r\n    return {\r\n        type: actionType.REMOVE_INGREDIENTE,\r\n        ingredientName: ingrName\r\n    }\r\n}\r\n\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionType.INITIALIZE_INGREDIENTS,\r\n        burgerIngredients: ingredients\r\n    }\r\n}\r\n\r\nconst setErrorState = () => {\r\n    return {\r\n        type: actionType.SET_ERROR\r\n    }\r\n}\r\n\r\nexport const initializeIngredientes = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n            .then(resp => dispatch(setIngredients(resp.data)))\r\n            .catch(err => dispatch(setErrorState()))\r\n    }\r\n}\r\n","import * as actionTypes from './types/orderActionTypes';\r\nimport axios from '../../axiosOrders';\r\n\r\n\r\nconst startOrderProcess = () => {\r\n    return {\r\n        type: actionTypes.BEGIN_ORDER\r\n    }\r\n}\r\n\r\nconst storeOrder = (id, orderInfo) => {\r\n    return {\r\n        type: actionTypes.ORDER_PLACED_SUCCESFULLY,\r\n        orderId: id,\r\n        orderData: orderInfo\r\n    }\r\n}\r\n\r\nconst setErrorState = (error) => {\r\n    return {\r\n        type: actionTypes.ORDER_PLACED_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const beginPlacingOrder = (idToken, orderInfo, history) => {\r\n    return dispatch => {\r\n        dispatch(startOrderProcess());\r\n        axios.post(`/orders.json?auth=${idToken}`, orderInfo)\r\n            .then(resp => {\r\n                history.push('/');\r\n                dispatch(storeOrder(resp.data.name, orderInfo));\r\n                return dispatch();\r\n            })\r\n            .catch(err => dispatch(setErrorState(err)));\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nconst startLoadOrdersProcess = () => {\r\n    return {\r\n        type: actionTypes.LOAD_ORDERS_START\r\n    }\r\n}\r\n\r\nconst loadOrdersSucess = (loadedOrders) => {\r\n    return {\r\n        type: actionTypes.LOAD_ORDERS_SUCESS,\r\n        fetchedOrders: loadedOrders\r\n    }\r\n}\r\n\r\nconst loadOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.LOAD_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport const loadOrders = (idToken, uid) => {\r\n    return dispatch => {\r\n        dispatch(startLoadOrdersProcess())\r\n        axios.get(`/orders.json?auth=${idToken}&orderBy=\"userId\"&equalTo=\"${uid}\"`)\r\n            .then(resp => {\r\n                const response = resp.data;\r\n                let fetchedOrders = [];\r\n                for (let order in response) {\r\n                    fetchedOrders.push({\r\n                        id: order,\r\n                        ...response[order]\r\n                    })\r\n                }\r\n                dispatch(loadOrdersSucess(fetchedOrders))\r\n            })\r\n            .catch(err => {\r\n                dispatch(loadOrdersFail(err))\r\n            });\r\n    }\r\n}\r\n\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBSpYj2HOSBPoU4IaSdzCbLYWmgswq2ItA\",\r\n    authDomain: \"react-mc-franco.firebaseapp.com\",\r\n    databaseURL: \"https://react-mc-franco.firebaseio.com\",\r\n    projectId: \"react-mc-franco\",\r\n    storageBucket: \"react-mc-franco.appspot.com\",\r\n    messagingSenderId: \"237448758454\",\r\n    appId: \"1:237448758454:web:0bb4f19032112729f01217\"\r\n};\r\n\r\nexport const firebaseConnector = firebase.initializeApp(firebaseConfig);\r\n","const ID_TOKEN = 'ID_TOKEN';\r\nconst USER_ID = 'USER_ID';\r\nconst TOKEN_EXP_DATE = 'TOKEN_EXP_DATE'\r\n\r\n\r\nexport const writeLocalStorage = (token, uid, expDate) => {\r\n    localStorage.setItem(ID_TOKEN, token);\r\n    localStorage.setItem(USER_ID, uid);\r\n    localStorage.setItem(TOKEN_EXP_DATE, expDate)\r\n}\r\n\r\nexport const readLocalStorage = () => {\r\n    const token = localStorage.getItem(ID_TOKEN)\r\n    const uid = localStorage.getItem(USER_ID);\r\n    const exp = new Date(+localStorage.getItem(TOKEN_EXP_DATE));\r\n    const user = {\r\n        idToken: token,\r\n        uid:uid ,\r\n        expDate: exp\r\n    }\r\n    return user;\r\n}\r\n\r\nexport const clearLocalStorage = () => {\r\n    try {\r\n        localStorage.removeItem(ID_TOKEN);\r\n        localStorage.removeItem(USER_ID);\r\n        localStorage.removeItem(TOKEN_EXP_DATE);\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n\r\n}","import * as actionType from './types/authActionTypes';\r\nimport { firebaseConnector } from '../../firebase';\r\nimport * as storageManager from './localStorageManager';\r\n\r\nexport const loginUser = (user, pwd) => {\r\n    return dispatch => {\r\n        dispatch(loginUserStart());\r\n        const auth = firebaseConnector.auth();\r\n        auth.signInWithEmailAndPassword(user, pwd)\r\n            .then(resp => {\r\n                const currentUser = auth.currentUser.toJSON();\r\n                dispatch(loginUserSuccess(currentUser.uid, currentUser.stsTokenManager.accessToken, currentUser.stsTokenManager.expirationTime))\r\n                storageManager.writeLocalStorage(currentUser.stsTokenManager.accessToken, currentUser.uid, currentUser.stsTokenManager.expirationTime)\r\n            })\r\n            .catch(err => dispatch(loginUserFail(err.message)))\r\n    }\r\n}\r\n\r\nexport const signUpUser = (email, pwd) => {\r\n    return dispatch => {\r\n        dispatch(signUpUserStart());\r\n        const auth = firebaseConnector.auth();\r\n        auth.createUserWithEmailAndPassword(email, pwd)\r\n            .then(resp => {\r\n                const currentUser = auth.currentUser.toJSON();\r\n                // currentUser.sendEmailVerification({\r\n                //     url: `https://localhost:3000/?idToken=${currentUser.stsTokenManager.accessToken}`\r\n                // });\r\n                storageManager.writeLocalStorage(currentUser.stsTokenManager.accessToken, currentUser.uid, currentUser.stsTokenManager.expirationTime)\r\n                dispatch(signUpUserSuccess(currentUser.uid, currentUser.stsTokenManager.accessToken, currentUser.stsTokenManager.expirationTime))\r\n            })\r\n            .catch(err => dispatch(signUpUserFail(err)))\r\n    }\r\n}\r\n\r\nexport const checkAuthenticatedUser = () => {\r\n    return dispatch => {\r\n        const user = storageManager.readLocalStorage();\r\n        if (user.idToken) {\r\n            const expDate = user.expDate;\r\n            if (expDate > new Date().getTime()) {\r\n                dispatch(loginUserSuccess(user.uid, user.idToken, user.expDate))\r\n            } else {\r\n                dispatch(logoutUser())\r\n            }\r\n        }\r\n        return;\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    storageManager.clearLocalStorage();\r\n    return {\r\n        type: actionType.LOGOUT\r\n    }\r\n}\r\n\r\nconst loginUserStart = () => {\r\n    return {\r\n        type: actionType.LOGIN_START\r\n    }\r\n}\r\n\r\nconst loginUserSuccess = (uid, idToken, expDate) => {\r\n    return {\r\n        type: actionType.LOGIN_SUCCESS,\r\n        user: {\r\n            uid: uid,\r\n            idToken: idToken,\r\n            expDate: expDate\r\n        }\r\n    }\r\n}\r\n\r\nconst loginUserFail = (err) => {\r\n    return {\r\n        type: actionType.LOGIN_FAIL,\r\n        error: err\r\n    }\r\n}\r\n\r\nconst signUpUserStart = () => {\r\n    return {\r\n        type: actionType.SIGNUP_START\r\n    }\r\n}\r\n\r\nconst signUpUserSuccess = (uid, idToken, expDate) => {\r\n    return {\r\n        type: actionType.SIGNUP_SUCCESS,\r\n        user: {\r\n            uid: uid,\r\n            idToken: idToken,\r\n            expDate: expDate\r\n        }\r\n    }\r\n}\r\n\r\nconst signUpUserFail = (err) => {\r\n    return {\r\n        type: actionType.SIGNUP_FAIL,\r\n        error: err\r\n    }\r\n}","export const BEGIN_ORDER = 'BEGIN_ORDER';\r\nexport const ORDER_PLACED_SUCCESFULLY = 'ORDER_PLACED_SUCCESFULLY';\r\nexport const ORDER_PLACED_ERROR = 'ORDER_PLACED_ERROR';\r\nexport const LOAD_ORDERS_START = 'LOAD_ORDERS_START';\r\nexport const LOAD_ORDERS_SUCESS = 'LOAD_ORDERS_SUCESS'\r\nexport const LOAD_ORDERS_FAIL = 'LOAD_ORDERS_FAIL';","const aux = (props) => props.children;\r\n\r\nexport default aux;","import axios from 'axios';\r\n\r\nconst orderInstance = axios.create({\r\n    baseURL: 'https://react-mc-franco.firebaseio.com/'\r\n})\r\n\r\nexport default orderInstance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = (props) => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","export const ADD_INGREDIENTE = 'ADD_INGREDIENTE';\r\nexport const REMOVE_INGREDIENTE = 'REMOVE_INGREDIENTE';\r\nexport const INITIALIZE_INGREDIENTS = 'INITIALIZE_INGREDIENTS';\r\nexport const SET_ERROR = 'SET_ERROR';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients_BreadBottom__3pYbf\",\"BreadTop\":\"BurgerIngredients_BreadTop__1vvL5\",\"Seeds1\":\"BurgerIngredients_Seeds1__3_Yni\",\"Seeds2\":\"BurgerIngredients_Seeds2__bvSZo\",\"Meat\":\"BurgerIngredients_Meat__iyNQO\",\"Cheese\":\"BurgerIngredients_Cheese__3Z600\",\"Salad\":\"BurgerIngredients_Salad__3s5sk\",\"Bacon\":\"BurgerIngredients_Bacon__1I1el\"};","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHanlder = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        };\r\n        \r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null });\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error });\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n\r\n        onErrorCloseModalHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} closeModal={this.onErrorCloseModalHandler}>\r\n                        Something did not work!\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHanlder;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputElement\":\"InputElement_InputElement__30nig\",\"Invalid\":\"InputElement_Invalid__1AUDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Toggle_Container__kvw-O\",\"Label\":\"Toggle_Label__3DO3l\",\"ToggleButton\":\"Toggle_ToggleButton__3trCt\",\"InnerCircle\":\"Toggle_InnerCircle__37j_X\",\"Active\":\"Toggle_Active__3LqTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidedrawer\":\"Sidedrawer_Sidedrawer__2eV2O\",\"Open\":\"Sidedrawer_Open__27ZZ1\",\"Close\":\"Sidedrawer_Close__13IDn\",\"Logo\":\"Sidedrawer_Logo__2dBSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1RGpp\",\"Label\":\"BuildControl_Label__1Hib4\",\"Less\":\"BuildControl_Less__2YBzk\",\"More\":\"BuildControl_More__1zVG8\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n\r\n    let bp = null;\r\n    if (props.show) {\r\n        bp = <div className={classes.Backdrop} onClick={props.clicked}></div>;\r\n    }\r\n    return (bp);\r\n}\r\n\r\nexport default backdrop;","import React, { Component } from 'react'\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary';\r\n\r\n\r\nclass Modal extends Component {\r\n    \r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (nextProps.show !== this.props.show) {\r\n    //         return true;\r\n    //     }\r\n    //     return false;\r\n    // }\r\n\r\n    render() {\r\n        let content = null;\r\n        if (this.props.show) {\r\n            content = (\r\n                <Aux>\r\n                    <Backdrop show={this.props.show} clicked={this.props.closeModal}  />\r\n                    <div className={classes.ModalContainer}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </Aux>\r\n            );\r\n        }\r\n        return (content);\r\n    }\r\n\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1kC0v\",\"Logo\":\"Toolbar_Logo__t92w4\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1lPGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2hEoa\",\"Success\":\"Button_Success__-X39M\",\"Cancel\":\"Button_Cancel__1_9w5\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\n\r\nconst button = (props) => {\r\n\r\n    let buttonClass = [];\r\n    buttonClass.push(classes.Button);\r\n\r\n    props.type === 'success' ? buttonClass.push(classes.Success) : buttonClass.push(classes.Cancel);\r\n\r\n\r\n    return (<button className={buttonClass.join(' ')} onClick={props.clicked}>\r\n        {props.children}\r\n    </button>\r\n    );\r\n}\r\n\r\nexport default button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavigationItem_NavItem__1pIUh\",\"active\":\"NavigationItem_active__2BohY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"BuildControls_ControlPanel__1smp0\",\"CheckoutButton\":\"BuildControls_CheckoutButton__3wFx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1ljFF\",\"OrderLabel\":\"Order_OrderLabel__2iGtk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Authentication\":\"Authentication_Authentication__36mdA\",\"InsideSpinner\":\"Authentication_InsideSpinner__22ifN\"};","import React from 'react';\r\nimport classes from './InputElement.module.css';\r\n\r\nconst inputElement = (props) => {\r\n\r\n    let inputElementStyle = [];\r\n    if (!props.valid) {\r\n        inputElementStyle.push(classes.Invalid)\r\n    }\r\n\r\n    let element = null;\r\n\r\n    switch (props.inputType) {\r\n        case 'input':\r\n            inputElementStyle.push(classes.InputBox);\r\n            element = <input className={inputElementStyle.join(' ')} {...props.elementConfig} value={props.value} onChange={(event) => props.changed(event, props.id)} />\r\n            break;\r\n        case 'dropdown':\r\n            inputElementStyle.push(classes.Dropdown);\r\n            element = (\r\n                <select className={inputElementStyle.join(' ')} value={props.value} onChange={(event) => props.changed(event, props.id)}>\r\n                    {props.elementConfig.options.map(option => {\r\n                        return <option key={option.value} value={option.value}>{option.displayValue}</option>\r\n                    })}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div key={props.id} className={classes.InputElement}>\r\n            <label className={classes.Label} hidden={true}>{props.label}</label>\r\n            {element}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default inputElement;","import React, { Component } from 'react'\r\nimport classes from './BurgerIngredients.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render() {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('top-bread'):\r\n                ingredient = <div className={classes.BreadTop}></div>\r\n                break;\r\n            case ('bottom-bread'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('seed1'):\r\n                ingredient = <div className={classes.Seeds1}></div>\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredient;","import React from 'react'\r\nimport BurgerIngredient from '../Burger/BurgerIngredients/BurgerIngredients'\r\n\r\nimport classes from './Burger.module.css'\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.burgerIngredients)\r\n        .map(ingKey => {\r\n            return [...Array(props.burgerIngredients[ingKey])].map((_, index) => {\r\n                return <BurgerIngredient key={ingKey + index} type={ingKey} />\r\n            })\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el);\r\n        }, []);\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <h4>Please add your ingredients!!</h4>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient key=\"topbread\" type=\"top-bread\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient key=\"bottombread\" type=\"bottom-bread\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2HFLs\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3fELO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavigationItems_NavItems__149Vp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1SM6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1Yi4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2hDtx\",\"load5\":\"Spinner_load5__nTe2L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__1E-1J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__1oyJ6\"};","import React from 'react';\r\nimport logoImage from '../../assets/img/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = props => {\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={logoImage} alt=\"MCFranco\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavItem}>\r\n            <NavLink to={props.href} \r\n                    activeClassName={classes.active}\r\n                    exact\r\n                    onClick={props.clicked}\r\n                    >{props.children}</NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nconst navigationItems = (props) => {\r\n\r\n    const loggedIn = (<NavigationItem href={\"/auth\"} clicked={props.clicked}>Login</NavigationItem>);\r\n    const loggedOut = (<NavigationItem href={\"/auth/logout\"} clicked={props.clicked}>Logout</NavigationItem>);\r\n\r\n    return (\r\n        <ul className={classes.NavItems}>\r\n            <NavigationItem href={\"/\"} clicked={props.clicked}>Burger</NavigationItem>\r\n            {props.authenticated ? <NavigationItem href={\"/orders\"} clicked={props.clicked}>Orders</NavigationItem> : null}\r\n            {props.authenticated ? loggedOut : loggedIn}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => {\r\n    return (\r\n        <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../Sidedrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = (props) => {\r\n    return (\r\n        <header className={classes.Toolbar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked} />\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n                <NavigationItems authenticated={props.authenticated}/>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../../NavigationItems/NavigationItems';\r\nimport classes from './Sidedrawer.module.css';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\n\r\nconst sidedrawer = props => {\r\n\r\n    let classToApply = [];\r\n    classToApply.push(classes.Sidedrawer);\r\n\r\n    if (props.show) {\r\n        classToApply.push(classes.Open)\r\n    } else {\r\n        classToApply.push(classes.Close)\r\n    }\r\n\r\n    let content = null;\r\n\r\n    if (props.show) {\r\n        content = (<Aux>\r\n            <Backdrop show={props.show} clicked={props.closeClicked} />\r\n            <div className={classToApply.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems clicked={props.closeClicked} authenticated={props.authenticated} />\r\n                </nav>\r\n            </div>\r\n        </Aux>);\r\n    }\r\n\r\n    return content;\r\n}\r\n\r\nexport default sidedrawer;","import React, { Component } from 'react'\r\nimport Aux from '../../hoc/Auxiliary'\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/Sidedrawer/Sidedrawer';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    closeSideDrawerHandler = () => {\r\n        this.setState({ showSideDrawer: false });\r\n    }\r\n\r\n    openSideDrawerHandler = () => {\r\n        this.setState({ showSideDrawer: true });\r\n    }\r\n\r\n    drawerTogglerHandler = () => {\r\n        this.setState((prevState) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const authenticated = this.props.user && true;\r\n        return (\r\n            <Aux>\r\n                <SideDrawer\r\n                    show={this.state.showSideDrawer}\r\n                    openClicked={this.openSideDrawerHandler}\r\n                    closeClicked={this.closeSideDrawerHandler}\r\n                    authenticated={authenticated}\r\n                />\r\n                <Toolbar show={!this.state.showSideDrawer}\r\n                    drawerToggleClicked={this.drawerTogglerHandler}\r\n                    authenticated={authenticated}\r\n\r\n                />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react'\r\nimport classes from './BuildControl.module.css'\r\n\r\n\r\nconst buildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            <button className={classes.Less} onClick={() => props.lessClicked(props.type)} disabled={props.disabled}>Less</button>\r\n            <button className={classes.More} onClick={() => props.moreClicked(props.type)}>More</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default buildControl;","import React from 'react'\r\n\r\nimport BuildControl from './BuildControl/BuildControl';\r\nimport classes from './BuildControls.module.css';\r\n\r\nconst buildControls = (props) => {\r\n\r\n    const controls = [\r\n        { label: \"Salad\", type: 'salad' },\r\n        { label: \"Cheese\", type: 'cheese' },\r\n        { label: \"Meat\", type: 'meat' },\r\n        { label: \"Bacon\", type: 'bacon' }\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.ControlPanel}>\r\n            <p>Current Price: <strong>$ {props.totalPrice.toFixed(2)}</strong></p>\r\n            {controls.map(ctrl => (\r\n                <BuildControl\r\n                    key={ctrl.label}\r\n                    label={ctrl.label}\r\n                    type={ctrl.type}\r\n                    lessClicked={props.lessButtonClicked}\r\n                    moreClicked={props.moreButtonClicked}\r\n                    disabled={props.disabledInfo[ctrl.type]} />\r\n            ))}\r\n            <button\r\n                disabled={!props.purchasable}\r\n                className={classes.CheckoutButton}\r\n                onClick={props.purchasing}>{props.authenticated ? 'PURCHASE' : 'SIGN UP'}</button>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n\r\n    const ingredients = Object.keys(props.ingredients)\r\n        .map(ingrKey => {\r\n            return (<li key={ingrKey}><span style={{ textTransform: 'capitalize' }}>{ingrKey}: {props.ingredients[ingrKey]}</span></li>);\r\n        });\r\n\r\n    return (\r\n        <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Ingredients of your burger:</p>\r\n            <ul>\r\n                {ingredients}\r\n            </ul>\r\n            <p><strong>Total: ${props.price.toFixed(2)}</strong></p>\r\n            <Button clicked={props.purchaseCanceled} type={'cancel'}>CANCEL</Button>\r\n            <Button clicked={props.continueClicked} type={'success'}>CONTINUE</Button>\r\n        </Aux>\r\n    );\r\n}\r\n\r\nexport default orderSummary;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axiosOrders';\r\n//import * as actionType from '../../store/actions/actionTypes';\r\nimport { addIngredientes, removeIngredientes, initializeIngredientes } from '../../store/actions/index';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.ingrs) {\r\n            this.props.fetchIngredients();\r\n        }\r\n    }\r\n\r\n    updatePurchasableState(ingredients) {\r\n        const sum = Object.values(ingredients)\r\n            .reduce((sum, el) => sum + el, 0);\r\n        return sum > 0;\r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        if (this.props.authenticated) {\r\n            this.setState({ purchasing: true })\r\n        } else {\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    cancelPurchasingHandler = () => {\r\n        this.setState({ purchasing: false })\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render() {\r\n        const disableInfo = { ...this.props.ingrs };\r\n\r\n        for (let key in disableInfo) {\r\n            disableInfo[key] = disableInfo[key] <= 0 ? true : false;\r\n        }\r\n\r\n        let orderSummary = <OrderSummary\r\n            ingredients={this.props.ingrs}\r\n            purchaseCanceled={this.cancelPurchasingHandler}\r\n            continueClicked={this.continuePurchaseHandler}\r\n            price={this.props.price} />;\r\n\r\n        if (this.state.loading) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n\r\n        let burger = this.state.error ? 'There was an error' : <Spinner />;\r\n        if (this.props.ingrs) {\r\n            burger = (<Aux>\r\n                <Burger burgerIngredients={this.props.ingrs} />\r\n                <BuildControls\r\n                    lessButtonClicked={this.props.onRemoveIngredient}\r\n                    moreButtonClicked={this.props.onAddIngredient}\r\n                    disabledInfo={disableInfo}\r\n                    totalPrice={this.props.price}\r\n                    purchasable={this.updatePurchasableState(this.props.ingrs)}\r\n                    purchasing={this.purchasingHandler}\r\n                    cancelPurchasing={this.cancelPurchasingHandler}\r\n                    authenticated={this.props.authenticated} />\r\n            </Aux>);\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingrs: state.burger.burgerIngredients,\r\n        price: state.burger.totalPrice,\r\n        error: state.burger.error,\r\n        authenticated: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddIngredient: (ingrName) => dispatch(addIngredientes(ingrName)),\r\n        onRemoveIngredient: (ingrName) => dispatch(removeIngredientes(ingrName)),\r\n        fetchIngredients: () => dispatch(initializeIngredientes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n    const ingredients = Object.keys(props.ingredients).map(ingrd => {\r\n        return (\r\n            <span className={classes.OrderLabel} key={ingrd}> {`${ingrd}(${props.ingredients[ingrd]})`}</span>\r\n        )\r\n    });\r\n\r\n    let orderDate = new Date(props.orderDate);\r\n    const date = `${orderDate.getDate()}/${orderDate.getMonth()}/${orderDate.getYear()}`;\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p style={{textAlign: 'right'}}><strong>{date}</strong></p>\r\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\r\n            <p>{ingredients}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../axiosOrders';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nclass Orders extends Component {\r\n\r\n    // state = {\r\n    //     orders: [],\r\n    //     loading: false\r\n    // }\r\n\r\n    componentDidMount() {\r\n        this.props.loadOrders(this.props.user);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.loading) {\r\n            orders = (<div>\r\n                {this.props.orderArray.map(order => {\r\n                    return (\r\n                        <Order\r\n                            key={order.id}\r\n                            price={+order.price}\r\n                            ingredients={order.ingredients}\r\n                            orderDate={order.date}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>);\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {orders}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProops = state => {\r\n    return {\r\n        orderArray: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadOrders: (user) => dispatch(actions.loadOrders(user.idToken, user.uid))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProops, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React from 'react';\r\nimport classes from './Toggle.module.css';\r\n\r\nconst toggle = (props) => {\r\n\r\n    const toggleButtonClasses = [];\r\n    toggleButtonClasses.push(classes.ToggleButton);\r\n    if (props.active) {\r\n        toggleButtonClasses.push(classes.Active)\r\n    }\r\n\r\n    return (\r\n        <div onClick={props.toggleClicked} className={classes.Container}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            <div className={toggleButtonClasses.join(' ')}>\r\n                <div className={classes.InnerCircle}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default toggle;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport InputElement from '../../components/UI/InputElement/InputElement';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Authentication.module.css';\r\nimport Toggle from '../../components/UI/Toggle/Toggle';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport axios from '../../axiosOrders';\r\nimport { loginUser, signUpUser } from '../../store/actions/index';\r\n\r\nclass Authentication extends Component {\r\n    state = {\r\n        loginForm: {\r\n            email: {\r\n                inputType: 'input',\r\n                value: '',\r\n                label: 'Username',\r\n                elementConfig: {\r\n                    placeholder: 'Enter your email',\r\n                    type: 'email',\r\n                    validationRules: {\r\n                        required: true,\r\n                        minLength: 5,\r\n                        isEmail: true\r\n                    }\r\n                },\r\n                touched: false,\r\n                valid: true\r\n            },\r\n            password: {\r\n                inputType: 'input',\r\n                value: '',\r\n                label: 'Password',\r\n                elementConfig: {\r\n                    placeholder: 'Enter your password',\r\n                    type: 'password',\r\n                    validationRules: {\r\n                        required: true,\r\n                        minLength: 6\r\n                    }\r\n                },\r\n                touched: false,\r\n                valid: true\r\n            },\r\n        },\r\n        loginFormValid: false,\r\n        isSignUp: false\r\n    }\r\n\r\n    onSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n        const username = this.state.loginForm['email'].value;\r\n        const password = this.state.loginForm['password'].value;\r\n        this.state.isSignUp ?\r\n            this.props.signupUser(username, password) : this.props.loginUser(username, password);\r\n\r\n    }\r\n\r\n    inputChangeHandler = (event, inputElement) => {\r\n        const updatedLoginForm = { ...this.state.loginForm };\r\n        const value = event.target.value;\r\n        updatedLoginForm[inputElement].value = value;\r\n        updatedLoginForm[inputElement].touched = true;\r\n        updatedLoginForm[inputElement].valid = this.validateInput(inputElement, value);\r\n        const formValid = this.checkFormValidity();\r\n        this.setState({ loginForm: updatedLoginForm, loginFormValid: formValid });\r\n    }\r\n\r\n    checkFormValidity() {\r\n        let valid = true;\r\n        for (let key in this.state.loginForm) {\r\n            if (this.state.loginForm[key].valid === false || this.state.loginForm[key].touched === false) {\r\n                valid = false;\r\n            }\r\n        }\r\n        return valid;\r\n    }\r\n\r\n    validateInput(inputElment, value) {\r\n        const rules = this.state.loginForm[inputElment].elementConfig.validationRules;\r\n        let valid = true;\r\n        if (rules && rules.required) {\r\n            if (value === '' && this.state.loginForm[inputElment].touched === true) {\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        if (rules && rules.minLength) {\r\n            if (value.length < rules.minLength) {\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        if (rules && rules.maxLength) {\r\n            if (value.length > rules.maxLength) {\r\n                valid = false;\r\n            }\r\n        }\r\n\r\n        if (rules && rules.isEmail) {\r\n            const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            valid = regex.test(value);\r\n        }\r\n\r\n        return valid;\r\n    }\r\n\r\n    onToggleButtonChange = (event) => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignUp: !prevState.isSignUp\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let formFieldsArray = [];\r\n\r\n        for (let key in this.state.loginForm) {\r\n            formFieldsArray.push({ id: key, input: this.state.loginForm[key] })\r\n        }\r\n\r\n        const formFields = formFieldsArray.map((field) => {\r\n            return (\r\n                <InputElement\r\n                    key={field.id}\r\n                    id={field.id}\r\n                    {...field.input}\r\n                    changed={this.inputChangeHandler}\r\n                />\r\n            );\r\n        })\r\n\r\n        const LOGIN = 'LOGIN';\r\n        const SIGN_UP = 'SIGN UP';\r\n        let buttonText = LOGIN;\r\n        if (this.state.isSignUp) {\r\n            buttonText = SIGN_UP;\r\n        }\r\n\r\n        const spinner = (<div className={classes.InsideSpinner}>\r\n            <Spinner />\r\n        </div>);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className={classes.Authentication}>\r\n                    <form onSubmit={this.onSubmitHandler}>\r\n                        {formFields}\r\n                        <span style={{ color: 'red' }}>{this.props.error}</span>\r\n                        <button disabled={!this.state.loginFormValid}>{this.props.loading ? spinner : buttonText}</button>\r\n                    </form>\r\n                    <Toggle\r\n                        label={`Switch to ${this.state.isSignUp ? LOGIN : SIGN_UP}`}\r\n                        active={this.state.isSignUp}\r\n                        toggleClicked={this.onToggleButtonChange}\r\n                    />\r\n                </div>\r\n                {this.props.user ? <Redirect to='/' /> : null}\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        user: state.auth.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loginUser: (user, pwd) => dispatch(loginUser(user, pwd)),\r\n        signupUser: (user, pwd) => dispatch(signUpUser(user, pwd))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Authentication, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { logoutUser } from '../../../store/actions/index';\r\n\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        return (<Redirect to='/' />)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logoutUser: () => dispatch(logoutUser())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component, Suspense } from 'react';\r\nimport Layout from './containers/Layout/Layout';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport Spinner from './components/UI/Spinner/Spinner';\r\nimport { connect } from 'react-redux'\r\nimport { checkAuthenticatedUser, logoutUser } from './store/actions/index';\r\n\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\r\nimport Orders from './containers/Orders/Orders';\r\nimport Authentication from './containers/Auth/Authentication';\r\nimport Logout from './containers/Auth/Logout/Logout';\r\n\r\n\r\n\r\nconst Checkout = React.lazy(() => import('./containers/Checkout/Checkout'));\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.checkForAuthenticatedUser();\r\n  }\r\n\r\n  render() {\r\n\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Route path=\"/checkout\" render={(props) => <Suspense fallback={<Spinner />}>\r\n          <Checkout {...props} />\r\n        </Suspense>} />\r\n        <Route path=\"/auth\" exact component={Authentication} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.authenticated) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Route path=\"/checkout\" render={(props) => <Suspense fallback={<Spinner />}>\r\n            <Checkout {...props} />\r\n          </Suspense>} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/auth/logout\" component={Logout} />\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      );\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          {routes}\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    checkForAuthenticatedUser: () => dispatch(checkAuthenticatedUser()),\r\n    logOutUser: () => dispatch(logoutUser())\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.user && true\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as ActionType from '../actions/types/burgerBuilderActionTypes';\r\n\r\nconst INGREDIENTS_PRICES = {\r\n    salad: 0.4,\r\n    cheese: 0.5,\r\n    bacon: 0.3,\r\n    meat: 1.5\r\n};\r\n\r\nconst initialState = {\r\n    // burgerIngredients: {\r\n    //     salad: 0,\r\n    //     bacon: 0,\r\n    //     cheese: 0,\r\n    //     meat: 0\r\n    // },\r\n    burgerIngredients: null,\r\n    totalPrice: 4,\r\n    error: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionType.ADD_INGREDIENTE:\r\n            return {\r\n                ...state,\r\n                burgerIngredients: {\r\n                    ...state.burgerIngredients,\r\n                    [action.ingredientName]: state.burgerIngredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDIENTS_PRICES[action.ingredientName]\r\n            };\r\n        case ActionType.REMOVE_INGREDIENTE:\r\n            return {\r\n                ...state,\r\n                burgerIngredients: {\r\n                    ...state.burgerIngredients,\r\n                    [action.ingredientName]: state.burgerIngredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDIENTS_PRICES[action.ingredientName]\r\n            };\r\n        case ActionType.INITIALIZE_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                burgerIngredients: action.burgerIngredients\r\n            }\r\n        case ActionType.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionType from '../actions/types/orderActionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionType.BEGIN_ORDER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.ORDER_PLACED_SUCCESFULLY:\r\n            const updatedOrders = state.orders.concat({ orderId: action.orderId, orderData: action.orderData });\r\n            return {\r\n                ...state,\r\n                orders: updatedOrders,\r\n                loading: false\r\n            }\r\n        case actionType.ORDER_PLACED_ERROR:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.LOAD_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.LOAD_ORDERS_SUCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.fetchedOrders,\r\n                loading: false\r\n            }\r\n        case actionType.LOAD_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n\r\n","import * as actionType from '../actions/types/authActionTypes';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    user: null,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionType.LOGIN_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.user\r\n            }\r\n        case actionType.LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionType.LOGOUT:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case actionType.SIGNUP_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionType.SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.user\r\n            }\r\n        case actionType.SIGNUP_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { applyMiddleware, createStore, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport burgerReducer from './store/reducers/burgerBuilderReducer';\r\nimport orderReducer from './store/reducers/orderReducer';\r\nimport authReducer from './store/reducers/authReducer';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  burger: burgerReducer,\r\n  orders: orderReducer,\r\n  auth: authReducer\r\n})\r\n\r\nconst loggerMiddleware = store => {\r\n  return next => {\r\n    return action => {\r\n      const result = next(action);\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk, loggerMiddleware)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}